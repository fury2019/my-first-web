package com.Hotel.controller.HotelNearbySpots;

import java.io.IOException;
import java.util.List;

import com.Hotel.service.HotelNearbySpots.HotelNearbySpotsService;
import com.Hotel.service.HotelNearbySpots.IHotelNearbySpotsService;
import com.Hotel.vo.Hotel_PlaceVO;
import com.Hotel.vo.MemberVO;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

@WebServlet("/HotelNearbySpots")
public class HotelNearbySpots extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String hotelId = request.getParameter("hotelId");
        if (hotelId == null || hotelId.isEmpty()) {
            response.sendError(HttpServletResponse.SC_BAD_REQUEST, "호텔 ID가 제공되지 않았습니다.");
            return;
        }

        HttpSession session = request.getSession();
        MemberVO loginMember = null;
        if (session != null) {
            loginMember = (MemberVO) session.getAttribute("loginCode");
        }

        String placeId = request.getParameter("placeId");
        if (placeId != null && loginMember != null) {
            IHotelNearbySpotsService service = HotelNearbySpotsService.getInstance();
            boolean isSuccess = service.updateLikeCount(placeId, loginMember.getMem_id());
            if (!isSuccess) {
                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "좋아요 처리에 실패했습니다.");
                return;
            }
        }

        IHotelNearbySpotsService service = HotelNearbySpotsService.getInstance();
        List<Hotel_PlaceVO> spots = service.getPlacesByHotelId(hotelId);
        for (Hotel_PlaceVO spot : spots) {
            spot.setPlaceLikeVo(service.selectPlacesLikeList(spot.getPlace_id()));
        }

        request.setAttribute("spots", spots);
        request.setAttribute("loginMember", loginMember);

        request.getRequestDispatcher("/jsp/displaySpots.jsp").forward(request, response);
    }


    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        doGet(request, response); // POST 요청도 GET 요청과 동일하게 처리
    }
}
